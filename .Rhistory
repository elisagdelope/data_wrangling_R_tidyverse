knitr::opts_chunk$set(echo = TRUE)
summary(cars)
library(tidyverse)
install.packages(tidyverse)
install.packages("tidyverse")
library(tidyverse)
datasaurus_dozen
datasaurus
library(datasauRus)
install.packages("datasauRus")
knitr::opts_chunk$set(
message = FALSE,
warning = TRUE,
include = FALSE
)
library(tidyverse)
library(datasauRus)
datasaurus_dozen
summarise(ds?dozen, n=n_distinct(dataset))
library(datasauRus)
library(datasauRus)
# Write your answer here
dim(datasaurus_dozen)
# Write your answer here
dim(datasaurus_dozen)
ncol(datasaurus_dozen)
nrow(datasaurus_dozen)
# Write your answer here
summarise(datasaurus_dozen)
# Write your answer here
ds_dozen <- datasaurus_dozen
ds_dozen
# Write your answer here
summarise(ds_dozen, n = n_distinct(dataset))
# Write your answer here
summarise(ds_dozen, n = n_distinct(dataset))
# Write your answer here
count(ds_dozen, dataset)
# Write your answer here
count(ds_dozen, dataset)
# Write your answer here
count(ds_dozen, dataset)
count(ds_dozen, dataset)
# Write your answer here
count(ds_dozen, dataset)
# Write your answer here
summarise(ds_dozen, n = n_distinct(dataset))
# Write your answer here
count(ds_dozen, dataset)
# Write your answer here
ds_dozen %>%
group_by(dataset) %>%
summarise(mean_x = mean(x),
mean_y = mean(y))
# Write your answer here
ds_dozen %>%
group_by(dataset) %>%
summarise(mean_x = mean(x),
mean_y = mean(y))
# Write your answer here
ds_dozen %>%
group_by(dataset) %>%
summarise(mean_x = sd(x),
mean_y = sd(y))
# Write your answer here
ds_dozen %>%
group_by(dataset) %>%
summarise(sd_x = sd(x),
sd_y = sd(y))
# Write your answer here
ds_dozen %>%
group_by(dataset) %>%
# across works with first on which columns and second on what to perform on selection
# 2 possibilities to select columns
# summarise(across(where(is.double), list(mean = mean, sd = sd)))
summarise(across(c(x, y), list(mean = mean, sd = sd)))
ds_dozen %>%
group_by(dataset)
ds_dozen
ds_dozen %>%
ggplot(aes(x=x, y =y)) +
geom_point()
ds_dozen %>%
ggplot(aes(x=x, y=y, colour=dataset())) +
geom_point()
ggplot(aes(x=x, y=y, colour=dataset) +
ds_dozen %>%
ggplot(aes(x=x, y=y, colour=dataset)) +
geom_point()
# Write your answer here
ds_dozen %>%
# Write your answer here
ds_dozen %>%
ggplot(aes(x=x, y =y)) +
geom_point()
ds_dozen %>%
ggplot(aes(x=x, y =y, colors=dataset)) +
geom_point()
ds_dozen %>%
ggplot(aes(x=x, y =y, colours=dataset)) +
geom_point()
ds_dozen %>%
ggplot(aes(x=x, y =y, colour=dataset)) +
geom_point()
ds_dozen %>%
filter(dataset=='away')
ds_dozen %>%
filter(dataset=='away')
ggplot(aes(x=x, y =y, colour=dataset)) +
geom_point()
ds_dozen %>%
filter(dataset='away') %>%
ggplot(aes(x=x, y =y, colour=dataset)) +
geom_point()
ds_dozen %>%
filter(dataset=='away') %>%
ggplot(aes(x=x, y =y, colour=dataset)) +
geom_point()
ds_dozen %>%
filter(dataset %in% c('away', 'bullseye')) %>%
ggplot(aes(x=x, y =y, colour=dataset)) +
geom_point()
ds_dozen %>%
filter(dataset %in% c('away', 'bullseye')) %>%
ggplot(aes(x=x, y =y, colour=dataset)) +
geom_point() +
facet_wrap(~ dataset)
ds_dozen %>%
ggplot(aes(x=x, y =y, colour=dataset)) +
geom_point() +
facet_wrap(~ dataset)
```{r height = 8 fig.height = 8}
ds_dozen %>%
ggplot(aes(x=x, y =y)) +
geom_point() +
facet_wrap(~ dataset)
```{r fig.height = 8, fig.width=10}
```{r, fig.height = 8, fig.width=10}
ds_dozen %>%
ggplot(aes(x=x, y =y, colour=dataset)) +
geom_point() +
facet_wrap(~ dataset)+
theme_void()
ds_dozen %>%
ggplot(aes(x=x, y =y, colour=dataset)) +
geom_point() +
facet_wrap(~ dataset)
ds_dozen %>%
ggplot(aes(x=x, y =y)) +
geom_point() +
facet_wrap(~ dataset)+
theme_void()
```{r, fig.height=8, fig.width=10}
ds_dozen %>%
ggplot(aes(x=x, y =y)) +
geom_point() +
facet_wrap(~ dataset)+
theme_void()
datasaurus_dozen
tibble(datasaurus_dozen)
# Write your answer here
tibble(datasaurus_dozen)
```{r}
ds_dozen <- datasaurus_dozen
library(vroom)
install.packages("vroom")
library(vroom)
vroom("data/swiss.csv")
swiss_db <- vroom("data/swiss.csv")
#choosing which columns to add
vroom("data/swiss.csv",
col_select = c(Fertility, Education))
vroom("example.csv",
col_skip('colour'))
vroom("data/example.csv",
col_skip('colour'))
vroom("data/example.csv")
vroom("data/example.csv",
col_names = c('animal', 'color', 'numbers'))
vroom("data/example.csv",
col_names = c('animal', 'color', 'numbers'),
col_skip = 'color')
vroom("data/example.csv",
col_names = c('animal', 'colour', 'value'),
colskip = 'colour')
vroom("data/example.csv",
col_names = c('animal',
'colour',
'value'),
col_types = cols(animal="c",
colour=" "
values= "i")
)
vroom("data/example.csv",
col_names = c('animal',
'colour',
'value'),
col_types = cols(animal="c",
colour=" "
values= "i"))
vroom("data/example.csv",
col_names = c('animal',
'colour',
'value'),
col_types = cols(animal="c",
colour=" ",
values= "i"))
vroom("data/example.csv",
col_names = c('animal',
'colour',
'value'),
col_types = cols(animal="c",
colour=" ",
values= "i"))
vroom("data/example.csv",
col_names = c('animal', 'colour', 'value'),
col_types = cols(animal="c", colour=" ",  values= "i"))
vroom("data/example.csv",
col_names = c('animal', 'colour', 'value'),
col_types = cols(animal="c", colour="_",  values= "i"))
vroom("data/example.csv",
col_names = c('animal', 'colour', 'value'),
col_types = cols(animal="c", colour="_",  value= "i"))
here:here()
here::here()
```{r}
```{r }
```{r}
library(dplyr)
library(vroom)
library(dplyr)
library(vroom)
# Write your answer here
blood_fat <- vroom("data/blood_fat.csv")
# Write your answer here
vroom("data/blood_fat.csv")
# Write your answer here
blood_fat <- vroom("data/blood_fat.csv")
# Write your answer here
vroom("data/blood_fat.csv")
# Write your answer here
blood_fat <- vroom("data/blood_fat.csv")
dbl [4]
# Write your answer here
blood_fat <- vroom("data/blood_fat.csv",
col_types = cols(age= "i", id="i"))
vroom("data/blood_fat.csv",
col_types = cols(age= "i", id="i"))
# Write your answer here
blood_fat <- vroom("data/blood_fat.csv",
col_types = cols(age= "i", id="i"))
# Write your answer here
blood_fat <- vroom("data/blood_fat.csv",
col_types = cols(age= "i", id="i", weight= "_"))
blood_fat %>%
group_by(group)
# Write your answer here
blood_fat %>%
group_by(group) %>%
# across works with first on which columns and second on what to perform on selection
# 2 possibilities to select columns
# summarise(across(where(is.double), list(mean = mean, sd = sd)))
summarise(across(c(age, fat), list(mean = mean, sd = sd)))
levels(blood_fat$group)
factor(blood_fat$group)
library(dplyr)
library(vroom)
# Write your answer here
vroom("data/blood_fat.csv")
